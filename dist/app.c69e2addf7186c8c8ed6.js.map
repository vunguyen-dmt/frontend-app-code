{"version":3,"file":"app.c69e2addf7186c8c8ed6.js","mappings":"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","sources":["webpack://@ga/frontend-app-code/./src/i18n/index.js","webpack://@ga/frontend-app-code/./src/components/test/TestPage.jsx","webpack://@ga/frontend-app-code/./src/messages.jsx","webpack://@ga/frontend-app-code/./src/components/IframeMaker/IframeMaker.jsx","webpack://@ga/frontend-app-code/./src/components/CodeApp/CodeApp.jsx","webpack://@ga/frontend-app-code/./src/services/codeService.js","webpack://@ga/frontend-app-code/./src/components/AccessDenied/AccessDenied.jsx","webpack://@ga/frontend-app-code/./src/App.jsx","webpack://@ga/frontend-app-code/./src/components/IframeMakerModal/IframeMakerModal.jsx","webpack://@ga/frontend-app-code/./src/index.jsx"],"sourcesContent":["import { messages as headerMessages } from '@edx/frontend-component-header';\nimport { messages as footerMessages } from '@edx/frontend-component-footer';\nimport { messages as paragonMessages } from '@edx/paragon';\n\nimport arMessages from './messages/ar.json';\nimport caMessages from './messages/ca.json';\n// no need to import en messages-- they are in the defaultMessage field\nimport es419Messages from './messages/es_419.json';\nimport frMessages from './messages/fr.json';\nimport zhcnMessages from './messages/zh_CN.json';\nimport heMessages from './messages/he.json';\nimport idMessages from './messages/id.json';\nimport kokrMessages from './messages/ko_kr.json';\nimport plMessages from './messages/pl.json';\nimport ptbrMessages from './messages/pt_br.json';\nimport ruMessages from './messages/ru.json';\nimport thMessages from './messages/th.json';\nimport ukMessages from './messages/uk.json';\nimport viMessages from './messages/vi.json';\n\nconst appMessages = {\n  ar: arMessages,\n  'es-419': es419Messages,\n  fr: frMessages,\n  'zh-cn': zhcnMessages,\n  ca: caMessages,\n  he: heMessages,\n  id: idMessages,\n  'ko-kr': kokrMessages,\n  pl: plMessages,\n  'pt-br': ptbrMessages,\n  ru: ruMessages,\n  th: thMessages,\n  uk: ukMessages,\n  vi: viMessages,\n};\n\nexport default [\n  headerMessages,\n  footerMessages,\n  paragonMessages,\n  appMessages,\n];\n","import React from 'react';\n\nconst TestPage = () => (\n<iframe\n    frameBorder=\"0\"\n    width=\"100%\"\n    height=\"594\"\n    src=\"https://apps.courses.goamazing.org:3000/editor/v1?language=cpp&theme=vs-dark&height=300px&default_value=%3Ciframe%0D%0A%20%20%20%20frameBorder%3D%220%22%0D%0A%20%20%20%20width%3D%22100%25%22%0D%0A%20%20%20%20height%3D%22594%22%0D%0A%20%20%20%20src%3D%22https%3A%2F%2Fapps.courses.goamazing.org%3A3000%2Feditor%2Fv1%3Flanguage%3Dcpp%26theme%3Dvs-dark%26height%3D300px%26default_value%3D%22%20%0D%0A%20%20%20%20%2F%3E\" \n    />);\n\nexport default TestPage;\n","import { defineMessages } from '@edx/frontend-platform/i18n';\n\nconst messages = defineMessages({\n  run: {\n    id: 'code.run',\n    defaultMessage: 'Run',\n    description: '',\n  },\n  stop: {\n    id: 'code.stop',\n    defaultMessage: 'Stop',\n    description: '',\n  },\n  output: {\n    id: 'code.output',\n    defaultMessage: 'Output',\n    description: '',\n  },\n  light: {\n    id: 'code.light',\n    defaultMessage: 'Light',\n    description: '',\n  },\n  dark: {\n    id: 'code.dark',\n    defaultMessage: 'Dark',\n    description: '',\n  },\n  version: {\n    id: 'code.version',\n    defaultMessage: 'Version',\n    description: '',\n  },\n  theme: {\n    id: 'code.theme',\n    defaultMessage: 'Theme',\n    description: '',\n  },\n  language: {\n    id: 'code.language',\n    defaultMessage: 'Language',\n    description: '',\n  },\n  codeWindowHeight: {\n    id: 'code.codeWindowHeight',\n    defaultMessage: 'Code window height',\n    description: '',\n  },\n  enterYourDefaultCode: {\n    id: 'code.enterYourDefaultCode',\n    defaultMessage: 'Enter your default code',\n    description: '',\n  },\n  copy: {\n    id: 'code.copy',\n    defaultMessage: 'Copy',\n    description: '',\n  },\n  copied: {\n    id: 'code.copied',\n    defaultMessage: 'Copied ',\n    description: '',\n  },\n  someThingWentWrongPleaseTryAgainLater: {\n    id: 'code.someThingWentWrongPleaseTryAgainLater',\n    defaultMessage: 'Something went wrong, please try again later!',\n    description: '',\n  },\n  error: {\n    id: 'code.error',\n    defaultMessage: 'Error',\n    description: '',\n  },\n  codeTooLong: {\n    id: 'code.codeTooLong',\n    defaultMessage: 'Your default code is too long.',\n    description: '',\n  },\n  processing: {\n    id: 'code.processing',\n    defaultMessage: 'Processing...',\n    description: '',\n  },\n  embedCode: {\n    id: 'code.embedCode',\n    defaultMessage: 'Embed code',\n    description: '',\n  },\n  message: {\n    id: 'code.message',\n    defaultMessage: 'Message',\n    description: '',\n  },\n  feedback: {\n    id: 'code.feedback',\n    defaultMessage: 'Feedback',\n    description: '',\n  },\n  reportDefaultFeedBack: {\n    id: 'code.reportDefaultFeedBack',\n    defaultMessage: `Unit link (if you are on web):\n<provide your unit link>\n\nYour programming language:\n<provide your programming language>\n\nYour code:\n<provide write your code here>\n\nAdditional information:\n<anything else?>\n    `,\n    description: '',\n  },\n  ifTheErrorPersist: {\n    id: 'code.ifTheErrorPersist',\n    defaultMessage: 'If the error persist',\n    description: '',\n  },\n  clickHere: {\n    id: 'code.clickHere',\n    defaultMessage: 'click here',\n    description: '',\n  },\n  toReport: {\n    id: 'code.toReport',\n    defaultMessage: 'to report',\n    description: '',\n  },\n  submitReport: {\n    id: 'code.submitReport',\n    defaultMessage: 'Submit report',\n    description: '',\n  },\n  cancel: {\n    id: 'code.cancel',\n    defaultMessage: 'Cancel',\n    description: '',\n  },\n  save: {\n    id: 'code.save',\n    defaultMessage: 'Save',\n    description: '',\n  },\n  thankForSubmittingTheReport: {\n    id: 'code.thankForSubmittingTheReport',\n    defaultMessage: 'Your report is submitted. Thank you for the report, our team will investigate the issue.',\n    description: '',\n  },\n  reportFailedToSubmit: {\n    id: 'code.reportFailedToSubmit',\n    defaultMessage: 'Failed to submit the report. Please try again!',\n    description: '',\n  },\n});\n\nexport default messages;\n","import React from 'react';\nimport {\n  Input, Button, OverlayTrigger, Popover, SelectMenu, MenuItem, Icon, Alert,\n} from '@edx/paragon';\nimport { CheckCircle, Info } from '@edx/paragon/icons';\nimport './IframeMaker.scss';\nimport Editor from '@monaco-editor/react';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport messages from '../../messages';\nimport Header from '@edx/frontend-component-header';\nimport Footer from '@edx/frontend-component-footer';\n\nconst IframeMaker = ({ intl }) => {\n  const [embedCode, setEmbedCode] = React.useState('');\n  const [theme, setTheme] = React.useState('vs-dark');\n  const [language, setLanguage] = React.useState('cpp');\n  const [version, setVersion] = React.useState('v1');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [height, setHeight] = React.useState('300');\n\n  const embedCodeRef = React.useRef();\n  const themeRef = React.useRef();\n  const languageRef = React.useRef();\n  const versionRef = React.useRef();\n  const heightRef = React.useRef();\n\n  embedCodeRef.current = embedCode;\n  themeRef.current = theme;\n  languageRef.current = language;\n  versionRef.current = version;\n  heightRef.current = height;\n\n  const editorRef = React.useRef(null);\n  const monacoRef = React.useRef(null);\n  const languageStyleExchange = {\n    c: 'c',\n    cpp: 'cpp',\n    python3: 'python',\n    java: 'java',\n  };\n\n  const updateEmbedCode = () => {\n    setErrorMessage('');\n    const { host } = window.location;\n    const publicPath = window.location.host.endsWith('3000') ? '' : '/code';\n    const iframeHeight = Number(heightRef.current) + 294;\n    const editorValue = editorRef && editorRef.current ? editorRef.current.getValue() : '';\n    const src = `https://${host}${publicPath}/editor/v1?language=${languageRef.current}&theme=${themeRef.current}&height=${heightRef.current}px&default_value=${encodeURIComponent(editorValue)}`;\n    if (src.length > 8000) {\n      setErrorMessage(intl.formatMessage(messages.codeTooLong));\n    }\n\n    const iframeEmbedCode = `<iframe\n    frameBorder=\"0\"\n    width=\"100%\"\n    height=\"${iframeHeight}\"\n    src=\"${src}\" \n    />`;\n\n    setEmbedCode(iframeEmbedCode);\n  };\n\n  React.useEffect(() => {\n    updateEmbedCode();\n  }, [theme, language, version, height]);\n\n  const copy = () => {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = embedCodeRef.current;\n    textarea.style.position = 'fixed';\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy');\n    } catch (ex) {\n      return '';\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  };\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n    monacoRef.current = monaco;\n  };\n\n  const selectTheme = (value) => {\n    setTheme(value);\n  };\n\n  const selectLanguage = (value) => {\n    setLanguage(value);\n  };\n\n  const handleOnChange = () => {\n    updateEmbedCode();\n  };\n\n  const heightChange = (e) => {\n    let { value } = e.target;\n    if (!value) {\n      value = '300';\n    }\n    setHeight(value);\n  };\n\n  return (\n    <div>\n      <Header />\n      <div className=\"code-exchange-wrapper\">\n        <p className=\"text-center font-weight-bold\">Iframe Maker</p>\n        <div className=\"flex-wrapper\">\n          <div>\n            <div className=\"font-weight-bold mb-1\">{intl.formatMessage(messages.version)}</div>\n            <SelectMenu>\n              <MenuItem defaultSelected>v1</MenuItem>\n              <MenuItem disabled>v2</MenuItem>\n            </SelectMenu>\n          </div>\n          <div>\n            <div className=\"font-weight-bold mb-1\">{intl.formatMessage(messages.theme)}</div>\n            <SelectMenu>\n              <MenuItem onClick={() => selectTheme('vs')}>{intl.formatMessage(messages.light)}</MenuItem>\n              <MenuItem onClick={() => selectTheme('vs-dark')} defaultSelected>{intl.formatMessage(messages.dark)}</MenuItem>\n            </SelectMenu>\n          </div>\n          <div>\n            <div className=\"font-weight-bold mb-1\">{intl.formatMessage(messages.language)}</div>\n            <SelectMenu>\n              <MenuItem defaultSelected onClick={() => selectLanguage('cpp')}>C++</MenuItem>\n              <MenuItem onClick={() => selectLanguage('c')}>C</MenuItem>\n              <MenuItem onClick={() => selectLanguage('java')}>Java</MenuItem>\n              <MenuItem onClick={() => selectLanguage('python3')}>Python 3</MenuItem>\n            </SelectMenu>\n          </div>\n        </div>\n\n        <div className=\"font-weight-bold mb-1\">{intl.formatMessage(messages.codeWindowHeight)} (px)</div>\n        <div className=\"height-wrapper\">\n          <Input onChange={(e) => heightChange(e)} type=\"number\" defaultValue={height} />\n        </div>\n        <div className=\"font-weight-bold mt-3 mb-1\">{intl.formatMessage(messages.enterYourDefaultCode)}</div>\n        <div className=\"editor-wrapper\">\n          <Editor\n            height={`${height}px`}\n            language={languageStyleExchange[language]}\n            theme={theme}\n            onMount={handleEditorDidMount}\n            onChange={handleOnChange}\n          />\n        </div>\n        <div className=\"font-weight-bold mt-3 mb-1\">{intl.formatMessage(messages.embedCode)} &nbsp;\n          <OverlayTrigger\n            trigger=\"click\"\n            key=\"top-success\"\n            placement=\"top\"\n            overlay={(\n              <Popover id=\"popover-positioned-top\" variant=\"success\">\n                <Popover.Title as=\"h3\"><Icon src={CheckCircle} /> {intl.formatMessage(messages.copied)}</Popover.Title>\n              </Popover>\n          )}\n          >\n            <Button onClick={copy} variant=\"outline-primary\" size=\"sm\" className=\"mb-2 mb-sm-0\">\n              {intl.formatMessage(messages.copy)}\n            </Button>\n          </OverlayTrigger>\n        </div>\n        {errorMessage && (\n        <Alert variant=\"danger\" icon={Info}>\n          <Alert.Heading>{intl.formatMessage(messages.error)}</Alert.Heading>\n          <p>{errorMessage}</p>\n        </Alert>\n        )}\n        <div>{embedCode}</div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nIframeMaker.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(IframeMaker);\n","import React from 'react';\nimport Editor from '@monaco-editor/react';\nimport {\n  Button, Spinner, ModalDialog, ActionRow, useToggle, Form, Alert,\n} from '@edx/paragon';\nimport './CodeApp.scss';\nimport { PlayArrow } from '@edx/paragon/icons';\nimport { getAuthenticatedUser } from '@edx/frontend-platform/auth';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport { sendCode, submitFeedback } from '../../services/codeService';\nimport messages from '../../messages';\n\nconst ErrorMessage = ({ message, intl }) => {\n  const [isOpen, open, close] = useToggle(false);\n  const [submitStatus, setSubmitStatus] = React.useState('unsubmit'); // unsubmit, submitting, submitted, failedToSubmit.\n  const defaultFeedbackMessage = intl.formatMessage(messages.reportDefaultFeedBack);\n  const [feedbackMessage, setFeedbackMessage] = React.useState(defaultFeedbackMessage);\n  const handleMessageChanged = (e) => {\n    setFeedbackMessage(e.target.value);\n  };\n\n  const submitReport = () => {\n    setSubmitStatus('submitting');\n    const user = getAuthenticatedUser();\n    const request = {\n      name: user.name,\n      email: user.email,\n      contactType: 'technical_bug_report',\n      message: feedbackMessage,\n      attachments: [],\n    };\n    submitFeedback(request).then(result => {\n      setSubmitStatus('submitted');\n    }).catch(error => {\n      setSubmitStatus('failedToSubmit');\n    });\n  };\n\n  const handleOpenModal = () => {\n    if (submitStatus !== 'submitting') {\n      setSubmitStatus('unsubmit');\n      setFeedbackMessage(defaultFeedbackMessage);\n    }\n    open();\n  };\n\n  return (\n    <div>\n      <Alert variant=\"danger\">\n        {message}<br />\n        {intl.formatMessage(messages.ifTheErrorPersist)} , <a className=\"modal-trigger-link\" onClick={handleOpenModal}>{intl.formatMessage(messages.clickHere)}</a> {intl.formatMessage(messages.toReport)}.\n      </Alert>\n      <ModalDialog\n        title=\"My dialog\"\n        isOpen={isOpen}\n        onClose={close}\n        size=\"md\"\n        variant=\"default\"\n        hasCloseButton\n        isFullscreenOnMobile\n      >\n        <ModalDialog.Header>\n          <ModalDialog.Title>\n            {intl.formatMessage(messages.feedback)}\n          </ModalDialog.Title>\n        </ModalDialog.Header>\n        <ModalDialog.Body>\n          {\n            submitStatus !== 'submitted' && (\n              <>\n                {submitStatus === 'failedToSubmit' && (\n                <Alert variant=\"danger\">\n                  {intl.formatMessage(messages.reportFailedToSubmit)}\n                </Alert>\n                )}\n                <Form.Group>\n                  <Form.Control\n                    autoResize\n                    as=\"textarea\"\n                    value={feedbackMessage}\n                    disabled={submitStatus === 'submitting'}\n                    onChange={handleMessageChanged}\n                    floatingLabel={intl.formatMessage(messages.message)}\n                  />\n                </Form.Group>\n              </>\n            )\n          }\n          {\n          submitStatus === 'submitted' && (\n          <Alert variant=\"success\">\n            {intl.formatMessage(messages.thankForSubmittingTheReport)}\n          </Alert>\n          )\n        }\n        </ModalDialog.Body>\n        <ModalDialog.Footer>\n          <ActionRow>\n            {\n              submitStatus !== 'submitted' && (\n                <>\n                  <ModalDialog.CloseButton variant=\"tertiary\">\n                    {intl.formatMessage(messages.cancel)}\n                  </ModalDialog.CloseButton>\n                  <Button variant=\"primary\" onClick={submitReport}>\n                    {intl.formatMessage(messages.submitReport)}&nbsp;\n                    {submitStatus === 'submitting' && <Spinner animation=\"border\" variants=\"light\" size=\"sm\" />}\n                  </Button>\n                </>\n              )\n            }\n            {\n              submitStatus === 'submitted' && (\n                <ModalDialog.CloseButton variant=\"tertiary\">\n                  Ok\n                </ModalDialog.CloseButton>\n              )\n            }\n          </ActionRow>\n        </ModalDialog.Footer>\n      </ModalDialog>\n    </div>\n  );\n};\n\nconst CodeApp = ({ intl }) => {\n  const supportedLanguages = ['c', 'cpp', 'python3', 'java'];\n  const languageHandlerExchange = {\n    c: 'c',\n    cpp: 'cpp',\n    python3: 'python3',\n    java: 'java',\n  };\n\n  const languageStyleExchange = {\n    c: 'c',\n    cpp: 'cpp',\n    python3: 'python',\n    java: 'java',\n  };\n\n  const editorRef = React.useRef(null);\n  const monacoRef = React.useRef(null);\n  const [running, setRunning] = React.useState(false);\n  const [consoleOutput, setConsoleOutput] = React.useState('');\n  const [errorMessage, setErrorMessage] = React.useState('');\n\n  const { search } = window.location;\n  const params = new URLSearchParams(search);\n  let height = '300px';\n  let theme = 'vs';\n  let language = '';\n  let defaultValue = '';\n\n  const inputHeight = params.get('height');\n  if (inputHeight) {\n    height = inputHeight;\n  }\n\n  const inputTheme = params.get('theme');\n  if (inputTheme) {\n    theme = inputTheme;\n  }\n\n  const inputDefaultValue = params.get('default_value');\n  if (inputDefaultValue) {\n    defaultValue = inputDefaultValue;\n  }\n\n  const inputLanguage = params.get('language');\n  if (!inputLanguage || !supportedLanguages.includes(inputLanguage.toLocaleLowerCase())) {\n    return ErrorMessage('unsuported language');\n  }\n\n  language = inputLanguage;\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n    monacoRef.current = monaco;\n  };\n\n  const runCode = () => {\n    if (!running) {\n      setErrorMessage('');\n      const request = {\n        code: editorRef.current.getValue(),\n        handler: languageHandlerExchange[language],\n      };\n      setConsoleOutput(intl.formatMessage(messages.processing));\n      sendCode(request).then(result => {\n        setConsoleOutput(result.data.error + result.data.output);\n        setRunning(false);\n      }).catch(error => {\n        setRunning(false);\n        setConsoleOutput('');\n        setErrorMessage(intl.formatMessage(messages.someThingWentWrongPleaseTryAgainLater));\n      });\n    }\n    setRunning(!running);\n  };\n\n  return (\n    <div className={`code-app-wrapper ${theme}`}>\n      <div className=\"tool-btns\">\n        <Button className=\"run-btn\" onClick={runCode} variant=\"primary\" size=\"sm\" iconAfter={running ? '' : PlayArrow}>\n          {running ? intl.formatMessage(messages.stop) : intl.formatMessage(messages.run)}\n          {running && <Spinner animation=\"border\" variants=\"light\" size=\"sm\" />}\n        </Button>\n      </div>\n      <Editor\n        height={height}\n        defaultValue={defaultValue}\n        language={languageStyleExchange[language]}\n        theme={theme}\n        onMount={handleEditorDidMount}\n      />\n      <div className=\"output-title\">{intl.formatMessage(messages.output)}</div>\n      {errorMessage && <ErrorMessage message={errorMessage} intl={intl} />}\n      <div className=\"output\">\n        <div>{consoleOutput}</div>\n      </div>\n    </div>\n  );\n};\n\nCodeApp.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(CodeApp);\n","import { getConfig } from '@edx/frontend-platform';\nimport { getAuthenticatedHttpClient, getHttpClient } from '@edx/frontend-platform/auth';\n\nexport const sendCode = (query) => {\n  let baseUrl = '';\n  if (getConfig().CODE_RUNNER_URL) {\n    baseUrl = getConfig().CODE_RUNNER_URL;\n  }\n  return getHttpClient().post(baseUrl, query);\n};\n\nexport const getStudioMe = () => {\n  const baseUrl = getConfig().STUDIO_BASE_URL;\n  return getAuthenticatedHttpClient().get(`${baseUrl}/api/user/v1/me`);\n};\n\nexport const submitFeedback = (request) => {\n  const baseUrl = 'https://learner-help-api.goamazing.org';\n  return getHttpClient().post(`${baseUrl}/support/from_bot`, request);\n};\n","import React from 'react';\nimport Header from '@edx/frontend-component-header';\nimport Footer from '@edx/frontend-component-footer';\n\nconst AccessDenied = () => (\n  <div>\n    <Header />\n    <p className=\"text-center mt-6 mb-6\">Permission denied.</p>\n    <Footer />\n  </div>\n);\n\nexport default AccessDenied;\n","import React from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport {\n  PageWrap,\n} from '@edx/frontend-platform/react';\nimport { getStudioMe } from './services/codeService';\nimport TestPage from './components/test/TestPage';\nimport IframeMaker from './components/IframeMaker/IframeMaker';\nimport CodeApp from './components/CodeApp/CodeApp';\nimport AccessDenied from './components/AccessDenied/AccessDenied';\n\nconst App = () => {\n  const [studioInfo, setStudioInfo] = React.useState(null);\n  React.useEffect(() => {\n    getStudioMe().then(result => {\n      setStudioInfo(result);\n    }).catch(error => {\n      if (!window.location.pathname.endsWith('/denied')) {\n        const publicPath = window.location.host.endsWith('3000') ? '' : '/code';\n        window.location.href = `${publicPath}/denied`;\n      }\n    });\n  }, []);\n\n  return (\n    <Routes>\n      {\n    studioInfo != null && (\n    <><Route\n      path=\"/maker\"\n      element={<PageWrap><IframeMaker /></PageWrap>}\n    />\n      <Route\n        path=\"/editor/v1\"\n        element={<PageWrap><CodeApp /></PageWrap>}\n      />\n      <Route\n        path=\"/test\"\n        element={<PageWrap><TestPage /></PageWrap>}\n      />\n    </>\n    )\n    }\n      <Route\n        path=\"/denied\"\n        element={<PageWrap><AccessDenied /></PageWrap>}\n      />\n    </Routes>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport {\n  Input, Button, OverlayTrigger, Popover, SelectMenu, MenuItem, Icon, Alert, ModalDialog,\n  useToggle, ActionRow,\n} from '@edx/paragon';\nimport { Info } from '@edx/paragon/icons';\nimport './IframeMakerModal.scss';\nimport Editor from '@monaco-editor/react';\nimport { injectIntl, intlShape } from '@edx/frontend-platform/i18n';\nimport messages from '../../messages';\n\nconst IframeMakerModal = ({ isOpen, close, tinymceEditorRef, intl }) => {\n//   const [isOpen, open, close] = useToggle(false);\n  const [embedCode, setEmbedCode] = React.useState('');\n  const [theme, setTheme] = React.useState('vs-dark');\n  const [language, setLanguage] = React.useState('cpp');\n  const [version, setVersion] = React.useState('v1');\n  const [errorMessage, setErrorMessage] = React.useState('');\n  const [height, setHeight] = React.useState('300');\n\n  const embedCodeRef = React.useRef();\n  const themeRef = React.useRef();\n  const languageRef = React.useRef();\n  const versionRef = React.useRef();\n  const heightRef = React.useRef();\n\n  embedCodeRef.current = embedCode;\n  themeRef.current = theme;\n  languageRef.current = language;\n  versionRef.current = version;\n  heightRef.current = height;\n\n  const editorRef = React.useRef(null);\n  const monacoRef = React.useRef(null);\n  const languageStyleExchange = {\n    c: 'c',\n    cpp: 'cpp',\n    python3: 'python',\n    java: 'java',\n  };\n\n  const updateEmbedCode = () => {\n    setErrorMessage('');\n    const { host } = window.location;\n    const publicPath = window.location.host.endsWith('3000') ? '' : '/code';\n    const iframeHeight = Number(heightRef.current) + 294;\n    const editorValue = editorRef && editorRef.current ? editorRef.current.getValue() : '';\n    const src = `https://${host}${publicPath}/editor/v1?language=${languageRef.current}&theme=${themeRef.current}&height=${heightRef.current}px&default_value=${encodeURIComponent(editorValue)}`;\n    if (src.length > 8000) {\n      setErrorMessage(intl.formatMessage(messages.codeTooLong));\n    }\n\n    const iframeEmbedCode = `<iframe\n    frameBorder=\"0\"\n    width=\"100%\"\n    height=\"${iframeHeight}\"\n    src=\"${src}\" \n    />`;\n\n    setEmbedCode(iframeEmbedCode);\n  };\n\n  React.useEffect(() => {\n    updateEmbedCode();\n  }, [theme, language, version, height]);\n\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n    monacoRef.current = monaco;\n  };\n\n  const selectTheme = (value) => {\n    setTheme(value);\n  };\n\n  const selectLanguage = (value) => {\n    setLanguage(value);\n  };\n\n  const handleOnChange = () => {\n    updateEmbedCode();\n  };\n\n  const heightChange = (e) => {\n    let { value } = e.target;\n    if (!value) {\n      value = '300';\n    }\n    setHeight(value);\n  };\n\n  const handleSaveClicked = () => {\n    tinymceEditorRef.insertContent(embedCode);\n    close();\n  }\n\n  return (\n    <div>\n      <ModalDialog\n        title=\"Insert code IDE\"\n        isOpen={isOpen}\n        onClose={close}\n        size=\"xl\"\n        variant=\"dark\"\n        hasCloseButton={false}\n        isFullscreenOnMobile={false}\n      >\n        <ModalDialog.Header>\n          <ModalDialog.Title>\n            Insert code IDE\n          </ModalDialog.Title>\n        </ModalDialog.Header>\n\n        <ModalDialog.Body>\n          <div className=\"code-exchange-wrapper\">\n            <div className=\"flex-wrapper\">\n              <div>\n                <div className=\"font-weight-bold mb-1\">{intl.formatMessage(messages.version)}</div>\n                <SelectMenu>\n                  <MenuItem defaultSelected>v1</MenuItem>\n                  <MenuItem disabled>v2</MenuItem>\n                </SelectMenu>\n              </div>\n              <div>\n                <div className=\"font-weight-bold mb-1\">{intl.formatMessage(messages.theme)}</div>\n                <SelectMenu>\n                  <MenuItem onClick={() => selectTheme('vs')}>{intl.formatMessage(messages.light)}</MenuItem>\n                  <MenuItem onClick={() => selectTheme('vs-dark')} defaultSelected>{intl.formatMessage(messages.dark)}</MenuItem>\n                </SelectMenu>\n              </div>\n              <div>\n                <div className=\"font-weight-bold mb-1\">{intl.formatMessage(messages.language)}</div>\n                <SelectMenu>\n                  <MenuItem defaultSelected onClick={() => selectLanguage('cpp')}>C++</MenuItem>\n                  <MenuItem onClick={() => selectLanguage('c')}>C</MenuItem>\n                  <MenuItem onClick={() => selectLanguage('java')}>Java</MenuItem>\n                  <MenuItem onClick={() => selectLanguage('python3')}>Python 3</MenuItem>\n                </SelectMenu>\n              </div>\n            </div>\n\n            <div className=\"font-weight-bold mb-1\">{intl.formatMessage(messages.codeWindowHeight)} (px)</div>\n            <div className=\"height-wrapper\">\n              <Input onChange={(e) => heightChange(e)} type=\"number\" defaultValue={height} />\n            </div>\n            <div className=\"font-weight-bold mt-3 mb-1\">{intl.formatMessage(messages.enterYourDefaultCode)}</div>\n            <div className=\"editor-wrapper\">\n              <Editor\n                height={`${height}px`}\n                language={languageStyleExchange[language]}\n                theme={theme}\n                onMount={handleEditorDidMount}\n                onChange={handleOnChange}\n              />\n            </div>\n            {errorMessage && (\n            <Alert variant=\"danger\" icon={Info}>\n              <Alert.Heading>{intl.formatMessage(messages.error)}</Alert.Heading>\n              <p>{errorMessage}</p>\n            </Alert>\n            )}\n          </div>\n        </ModalDialog.Body>\n\n        <ModalDialog.Footer>\n          <ActionRow>\n            <ModalDialog.CloseButton variant=\"tertiary\" onClick={close}>\n              {intl.formatMessage(messages.cancel)}\n            </ModalDialog.CloseButton>\n            <Button variant=\"primary\" onClick={handleSaveClicked}>\n              {intl.formatMessage(messages.save)}\n            </Button>\n          </ActionRow>\n        </ModalDialog.Footer>\n      </ModalDialog>\n    </div>\n  );\n};\n\nIframeMakerModal.propTypes = {\n  intl: intlShape.isRequired,\n};\n\nexport default injectIntl(IframeMakerModal);\n","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport {\n  APP_INIT_ERROR, APP_READY, subscribe, initialize, getConfig,\n} from '@edx/frontend-platform';\nimport {\n  AppProvider, ErrorPage,\n} from '@edx/frontend-platform/react';\nimport ReactDOM from 'react-dom';\nimport { Helmet } from 'react-helmet';\nimport messages from './i18n';\nimport './index.scss';\nimport App from './App';\nimport IframeMakerModal from './components/IframeMakerModal/IframeMakerModal';\n\nsubscribe(APP_READY, () => {\n  ReactDOM.render(\n    <AppProvider>\n      <Helmet>\n        <title>\n          Code | {getConfig().SITE_NAME}\n        </title>\n        <link rel=\"shortcut icon\" href={getConfig().FAVICON_URL} type=\"image/x-icon\" />\n      </Helmet>\n      <App />\n    </AppProvider>,\n    document.getElementById('root'),\n  );\n});\n\nsubscribe(APP_INIT_ERROR, (error) => {\n  ReactDOM.render(<ErrorPage message={error.message} />, document.getElementById('root'));\n});\n\ninitialize({\n  messages,\n});\n\nexport { IframeMakerModal };"],"names":["appMessages","ar","fr","ca","he","id","pl","ru","th","uk","vi","headerMessages","footerMessages","paragonMessages","TestPage","_jsx","frameBorder","width","height","src","defineMessages","run","defaultMessage","description","stop","output","light","dark","version","theme","language","codeWindowHeight","enterYourDefaultCode","copy","copied","someThingWentWrongPleaseTryAgainLater","error","codeTooLong","processing","embedCode","message","feedback","reportDefaultFeedBack","ifTheErrorPersist","clickHere","toReport","submitReport","cancel","save","thankForSubmittingTheReport","reportFailedToSubmit","IframeMaker","_ref","intl","setEmbedCode","React","setTheme","setLanguage","setVersion","errorMessage","setErrorMessage","setHeight","embedCodeRef","themeRef","languageRef","versionRef","heightRef","current","editorRef","monacoRef","updateEmbedCode","host","window","location","publicPath","endsWith","iframeHeight","Number","editorValue","getValue","encodeURIComponent","length","formatMessage","messages","selectTheme","value","selectLanguage","_jsxs","children","Header","className","SelectMenu","MenuItem","defaultSelected","disabled","onClick","Input","onChange","e","target","heightChange","type","defaultValue","Editor","c","cpp","python3","java","onMount","handleEditorDidMount","editor","monaco","handleOnChange","OverlayTrigger","trigger","placement","overlay","Popover","variant","Title","as","Icon","CheckCircle","Button","textarea","document","createElement","textContent","style","position","body","appendChild","select","execCommand","ex","removeChild","size","Alert","icon","Info","Heading","Footer","propTypes","intlShape","isRequired","injectIntl","ErrorMessage","isOpen","open","close","useToggle","submitStatus","setSubmitStatus","defaultFeedbackMessage","feedbackMessage","setFeedbackMessage","handleOpenModal","ModalDialog","title","onClose","hasCloseButton","isFullscreenOnMobile","Body","_Fragment","Form","Group","Control","autoResize","floatingLabel","ActionRow","CloseButton","user","getAuthenticatedUser","request","name","email","contactType","attachments","getHttpClient","post","then","result","catch","Spinner","animation","variants","CodeApp","_ref2","languageHandlerExchange","running","setRunning","consoleOutput","setConsoleOutput","search","params","URLSearchParams","inputHeight","get","inputTheme","inputDefaultValue","inputLanguage","includes","toLocaleLowerCase","runCode","code","handler","query","baseUrl","getConfig","CODE_RUNNER_URL","sendCode","data","iconAfter","PlayArrow","AccessDenied","App","studioInfo","setStudioInfo","getStudioMe","STUDIO_BASE_URL","getAuthenticatedHttpClient","pathname","href","Routes","Route","path","element","PageWrap","IframeMakerModal","tinymceEditorRef","handleSaveClicked","insertContent","subscribe","APP_READY","ReactDOM","AppProvider","Helmet","SITE_NAME","rel","FAVICON_URL","getElementById","APP_INIT_ERROR","ErrorPage","initialize"],"sourceRoot":""}